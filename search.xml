<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>mybatis-plus学习(一)</title>
      <link href="2021/03/09/mybatis-plus-xue-xi-yi/"/>
      <url>2021/03/09/mybatis-plus-xue-xi-yi/</url>
      
        <content type="html"><![CDATA[<p>​    <strong>MyBatis-Plus(简称MP),是一个MyBatis的一个增强工具包,只做增强不做改变,为简化开发工作,提高生产率而生</strong></p><h2 id="1-基础环境搭建"><a href="#1-基础环境搭建" class="headerlink" title="1.基础环境搭建"></a>1.基础环境搭建</h2><h3 id="1-1首先创建数据库和表信息"><a href="#1-1首先创建数据库和表信息" class="headerlink" title="1.1首先创建数据库和表信息"></a>1.1首先创建数据库和表信息</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 创建库</span><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> mp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 使用库</span><span class="token keyword">USE</span> mp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 创建表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>tbl_employee<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>last_name<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>email<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>gender<span class="token punctuation">`</span> char<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>age<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">5</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--插入信息</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> tbl_employee<span class="token punctuation">(</span>last_name<span class="token punctuation">,</span>email<span class="token punctuation">,</span>gender<span class="token punctuation">,</span>age<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'Tom'</span><span class="token punctuation">,</span><span class="token string">'tom@atguigu.com'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> tbl_employee<span class="token punctuation">(</span>last_name<span class="token punctuation">,</span>email<span class="token punctuation">,</span>gender<span class="token punctuation">,</span>age<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'Jerry'</span><span class="token punctuation">,</span><span class="token string">'jerry@atguigu.com'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> tbl_employee<span class="token punctuation">(</span>last_name<span class="token punctuation">,</span>email<span class="token punctuation">,</span>gender<span class="token punctuation">,</span>age<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'Black'</span><span class="token punctuation">,</span><span class="token string">'black@atguigu.com'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> tbl_employee<span class="token punctuation">(</span>last_name<span class="token punctuation">,</span>email<span class="token punctuation">,</span>gender<span class="token punctuation">,</span>age<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'White'</span><span class="token punctuation">,</span><span class="token string">'white@atguigu.com'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="1-2创建JavaBean"><a href="#1-2创建JavaBean" class="headerlink" title="1.2创建JavaBean"></a>1.2创建JavaBean</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Getter<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Setter<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>ToString<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @Author duyaan * @PROJECT_NAME [shangguigu] * @Date 2021/3/9 9:29 */</span><span class="token annotation punctuation">@ToString</span><span class="token annotation punctuation">@Getter</span><span class="token annotation punctuation">@Setter</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Employee</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Integer id <span class="token punctuation">;</span>    <span class="token keyword">private</span> String lastName<span class="token punctuation">;</span>    <span class="token keyword">private</span> String email <span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer gender <span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer age <span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="1-3创建mybatis-config-xml"><a href="#1-3创建mybatis-config-xml" class="headerlink" title="1.3创建mybatis-config.xml"></a>1.3创建mybatis-config.xml</h3><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype">&lt;!DOCTYPE configuration        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"        "http://mybatis.org/dtd/mybatis-3-config.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre><h3 id="1-4创建log4j-xml"><a href="#1-4创建log4j-xml" class="headerlink" title="1.4创建log4j.xml"></a>1.4创建log4j.xml</h3><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype">&lt;!DOCTYPE log4j:configuration SYSTEM "http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/xml/doc-files/log4j.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">log4j:</span>configuration</span> <span class="token attr-name">debug</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>STDOUT<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.apache.log4j.ConsoleAppender<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Encoding<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.apache.log4j.PatternLayout<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ConversionPattern<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>%-5p %d{MM-ddHH:mm:ss,SSS} %m (%F:%L) \n<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logger</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java.sql<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>level</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>debug<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>logger</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logger</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.apache.ibatis<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>level</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>logger</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>level</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>debug<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>STDOUT<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">log4j:</span>configuration</span><span class="token punctuation">></span></span></code></pre><h3 id="1-5创建db-properties"><a href="#1-5创建db-properties" class="headerlink" title="1.5创建db.properties"></a>1.5创建db.properties</h3><pre class=" language-properties"><code class="language-properties"><span class="token attr-name">jdbc.driver</span><span class="token punctuation">=</span><span class="token attr-value">com.mysql.jdbc.Driver</span><span class="token attr-name">jdbc.url</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql://localhost:3306/mp</span><span class="token attr-name">jdbc.username</span><span class="token punctuation">=</span><span class="token attr-value">root</span><span class="token attr-name">jdbc.password</span><span class="token punctuation">=</span><span class="token attr-value">root</span></code></pre><h3 id="1-6创建applicationContext-xml"><a href="#1-6创建applicationContext-xml" class="headerlink" title="1.6创建applicationContext.xml"></a>1.6创建applicationContext.xml</h3><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>tx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/tx<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>mybatis-spring</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://mybatis.org/schema/mybatis-spring<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://mybatis.org/schema/mybatis-springhttp://mybatis.org/schema/mybatis-spring-1.2.xsdhttp://www.springframework.org/schema/beanshttp://www.springframework.org/schema/beans/spring-beans.xsdhttp://www.springframework.org/schema/contexthttp://www.springframework.org/schema/context/spring-context-4.0.xsdhttp://www.springframework.org/schema/txhttp://www.springframework.org/schema/tx/spring-tx-4.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 数据源 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>property-placeholder</span> <span class="token attr-name">location</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>classpath:db.properties<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span>          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.mchange.v2.c3p0.ComboPooledDataSource<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>driverClass<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${jdbc.driver}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jdbcUrl<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${jdbc.url}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${jdbc.username}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${jdbc.password}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 事务管理器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSourceTransactionManager<span class="token punctuation">"</span></span>          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.jdbc.datasource.DataSourceTransactionManager<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 基于注解的事务管理 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">tx:</span>annotation-driven</span>            <span class="token attr-name">transaction-manager</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSourceTransactionManager<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!--配置SQLSessionFactoryBean        mybatis提供的: org.mybatis.spring.SqlSessionFactoryBean        MP提供的是: com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean    --></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置 SqlSessionFactoryBean --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sqlSessionFactoryBean<span class="token punctuation">"</span></span>          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.mybatis.spring.SqlSessionFactoryBean<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 数据源 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>configLocation<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>classpath:mybatis-config.xml<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 别名处理 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>typeAliasesPackage<span class="token punctuation">"</span></span>                  <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.atguigu.mp.beans<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--    配置 mybatis 扫描 mapper 接口的路径    --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.mybatis.spring.mapper.MapperScannerConfigurer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>basePackage<span class="token punctuation">"</span></span>                  <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.atguigu.mp.mapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span></code></pre><h3 id="1-7写一个测试用例"><a href="#1-7写一个测试用例" class="headerlink" title="1.7写一个测试用例"></a>1.7写一个测试用例</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>DataSource<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>Connection<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>SQLException<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @Author duyaan * @PROJECT_NAME [shangguigu] * @Date 2021/3/9 9:48 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MpTest</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> ApplicationContext iocContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"applicationContext.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> SQLException <span class="token punctuation">{</span>        DataSource ds <span class="token operator">=</span> iocContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"dataSource"</span><span class="token punctuation">,</span> DataSource<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Connection connection <span class="token operator">=</span> ds<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="1-8集成mybatis-plus"><a href="#1-8集成mybatis-plus" class="headerlink" title="1.8集成mybatis-plus"></a>1.8集成mybatis-plus</h3><p>对于spring来说,我们把mybatis集成的SqlSessionFactoryBean替换成MP自带的即可</p><pre class=" language-xml"><code class="language-xml">     <span class="token comment" spellcheck="true">&lt;!--配置SQLSessionFactoryBean        mybatis提供的: org.mybatis.spring.SqlSessionFactoryBean        MP提供的是: com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean    --></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置 SqlSessionFactoryBean --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sqlSessionFactoryBean<span class="token punctuation">"</span></span>          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 数据源 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>configLocation<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>classpath:mybatis-config.xml<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 别名处理 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>typeAliasesPackage<span class="token punctuation">"</span></span>                  <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.atguigu.mp.beans<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span></code></pre><h2 id="2-通用CRUD"><a href="#2-通用CRUD" class="headerlink" title="2.通用CRUD"></a>2.通用CRUD</h2><ul><li>实现方式的区别<ul><li>基于MyBatis<ul><li>需要编写实体类对应的mapper接口,并手动编写CRUD的方法</li><li>需要提供mapper.xml,并手动编写sql语句</li></ul></li><li>基于MP<ul><li>只需要创建实体类对应的Mapper接口,并继承BaseMapper接口</li><li>需要完成所有的操作,基于不需要创建的sql映射文件</li></ul></li></ul></li></ul><h3 id="2-1创建mapper接口"><a href="#2-1创建mapper接口" class="headerlink" title="2.1创建mapper接口"></a>2.1创建mapper接口</h3><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * BaseMapper&lt;T> 泛型指定就是当前mapper操作的实体类类型 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">EmployeeMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token operator">&lt;</span>Employee<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h3 id="2-2CRUD测试用例"><a href="#2-2CRUD测试用例" class="headerlink" title="2.2CRUD测试用例"></a>2.2CRUD测试用例</h3><pre class=" language-java"><code class="language-java"> <span class="token keyword">private</span> EmployeeMapper employeeMapper <span class="token operator">=</span> iocContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"employeeMapper"</span><span class="token punctuation">,</span>EmployeeMapper<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testCommonInsert</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Employee employee <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        employee<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token string">"itcomduke@qq.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        employee<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        employee<span class="token punctuation">.</span><span class="token function">setGender</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        employee<span class="token punctuation">.</span><span class="token function">setLastName</span><span class="token punctuation">(</span><span class="token string">"duke"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Integer result <span class="token operator">=</span> employeeMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h4 id="2-2-1报错"><a href="#2-2-1报错" class="headerlink" title="2.2.1报错"></a>2.2.1报错</h4><p>报错的说的是参数类型异常,主要原因是MP插入的ID和数据库的ID字段不同,<strong>在实体类中没有设置主键策略和表名称</strong></p><pre class=" language-xml"><code class="language-xml">org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: Could not set property 'id' of 'class com.atguigu.mp.beans.Employee' with value '1369117986975158273' Cause: java.lang.IllegalArgumentException: argument type mismatch    at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)    at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)    at com.sun.proxy.$Proxy11.insert(Unknown Source)    at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)    at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)    at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)    at com.sun.proxy.$Proxy14.insert(Unknown Source)    at com.shangguigu.test.MpTest.testCommonInsert(MpTest.java:29)    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)    at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)    at java.base/java.lang.reflect.Method.invoke(Method.java:566)    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:69)    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:48)    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)    at org.junit.runners.ParentRunner.run(ParentRunner.java:292)    at org.junit.runner.JUnitCore.run(JUnitCore.java:157)    at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)    at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)    at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)    at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)Caused by: org.apache.ibatis.reflection.ReflectionException: Could not set property 'id' of 'class com.atguigu.mp.beans.Employee' with value '1369117986975158273' Cause: java.lang.IllegalArgumentException: argument type mismatch    at org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(BeanWrapper.java:185)    at org.apache.ibatis.reflection.wrapper.BeanWrapper.set(BeanWrapper.java:59)    at org.apache.ibatis.reflection.MetaObject.setValue(MetaObject.java:140)    at com.baomidou.mybatisplus.MybatisDefaultParameterHandler.populateKeys(MybatisDefaultParameterHandler.java:217)    at com.baomidou.mybatisplus.MybatisDefaultParameterHandler.processBatch(MybatisDefaultParameterHandler.java:156)    at com.baomidou.mybatisplus.MybatisDefaultParameterHandler.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init</span><span class="token punctuation">></span></span>(MybatisDefaultParameterHandler.java:71)    at com.baomidou.mybatisplus.MybatisXMLLanguageDriver.createParameterHandler(MybatisXMLLanguageDriver.java:37)    at org.apache.ibatis.session.Configuration.newParameterHandler(Configuration.java:545)    at org.apache.ibatis.executor.statement.BaseStatementHandler.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init</span><span class="token punctuation">></span></span>(BaseStatementHandler.java:69)    at org.apache.ibatis.executor.statement.PreparedStatementHandler.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init</span><span class="token punctuation">></span></span>(PreparedStatementHandler.java:40)    at org.apache.ibatis.executor.statement.RoutingStatementHandler.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init</span><span class="token punctuation">></span></span>(RoutingStatementHandler.java:46)    at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:558)    at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)    at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)    at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)    at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)    at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)    at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)    at java.base/java.lang.reflect.Method.invoke(Method.java:566)    at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)    ... 28 moreCaused by: java.lang.IllegalArgumentException: argument type mismatch    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)    at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)    at java.base/java.lang.reflect.Method.invoke(Method.java:566)    at org.apache.ibatis.reflection.invoker.MethodInvoker.invoke(MethodInvoker.java:41)    at org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(BeanWrapper.java:180)    ... 49 more</code></pre><h5 id="MP支持四种主键策略"><a href="#MP支持四种主键策略" class="headerlink" title="MP支持四种主键策略"></a>MP支持四种主键策略</h5><table><thead><tr><th align="center">值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">idType.AUTO</td><td align="center">数据库ID自增</td></tr><tr><td align="center">idType.INPUT</td><td align="center">用户输入ID</td></tr><tr><td align="center">idType.ID_WORKER</td><td align="center">全局唯一ID,内容为空自动填充(默认配置)</td></tr><tr><td align="center">idType.UUID</td><td align="center">全局唯一ID,内容为空自动填充</td></tr></tbody></table><h4 id="2-2-2解决方案"><a href="#2-2-2解决方案" class="headerlink" title="2.2.2解决方案"></a>2.2.2解决方案</h4><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@ToString</span><span class="token annotation punctuation">@Getter</span><span class="token annotation punctuation">@Setter</span><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"tbl_employee"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Employee</span> <span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">/**     * TableId     *  value: 指定数据库表中主键列的列名,如果与实体类中一致,省略不写     *  type: 主键策略     */</span>    <span class="token annotation punctuation">@TableId</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"id"</span><span class="token punctuation">,</span> type <span class="token operator">=</span> IdType<span class="token punctuation">.</span>AUTO<span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer id <span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 数据库对应的列名     */</span>    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"last_name"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String lastName<span class="token punctuation">;</span>    <span class="token keyword">private</span> String email <span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer gender <span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer age <span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * exist为false 会在运行的时候忽略掉     */</span>    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>exist <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Double salay<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h5 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a><strong>全局配置</strong></h5><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- 配置 SqlSessionFactoryBean --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sqlSessionFactoryBean<span class="token punctuation">"</span></span>          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 数据源 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>configLocation<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>classpath:mybatis-config.xml<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 别名处理 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>typeAliasesPackage<span class="token punctuation">"</span></span>                  <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.atguigu.mp.beans<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--MP的全局策略--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>globalConfig<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>globalConfiguration<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--全局策略--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>globalConfiguration<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.baomidou.mybatisplus.entity.GlobalConfiguration<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--在MP2.3之后默认 dbColumnUnderline的值是true--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dbColumnUnderline<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!--全局的主键策略--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>idType<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!--全局表前缀--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tablePrefix<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tbl_<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span></code></pre><h4 id="2-2-3-CRUD所有的测试Demo"><a href="#2-2-3-CRUD所有的测试Demo" class="headerlink" title="2.2.3 CRUD所有的测试Demo"></a>2.2.3 CRUD所有的测试Demo</h4><pre class=" language-java"><code class="language-java"> <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testCommonInsert</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        Employee employee <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        employee<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token string">"itcomduke@qq.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">// employee.setAge(23);</span>        <span class="token comment" spellcheck="true">//employee.setGender(0);</span>        employee<span class="token punctuation">.</span><span class="token function">setLastName</span><span class="token punctuation">(</span><span class="token string">"duke"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*Integer result = employeeMapper.insert(employee);        System.out.println(result);*/</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"------------------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Integer integer <span class="token operator">=</span> employeeMapper<span class="token punctuation">.</span><span class="token function">insertAllColumn</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>integer<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"------------------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Integer key <span class="token operator">=</span> employee<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"key :"</span> <span class="token operator">+</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span>  <span class="token function">testCommonUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Employee employee <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        employee<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        employee<span class="token punctuation">.</span><span class="token function">setLastName</span><span class="token punctuation">(</span><span class="token string">"tom"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        employee<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token string">"itcom@163.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        employee<span class="token punctuation">.</span><span class="token function">setGender</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        employee<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">// employeeMapper.updateById(employee);</span>        Integer integer <span class="token operator">=</span> employeeMapper<span class="token punctuation">.</span><span class="token function">updateAllColumnById</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>integer<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testCommonSelect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//Employee employee = employeeMapper.selectById(12);</span>        <span class="token comment" spellcheck="true">/*Employee employee = new Employee();        employee.setAge(22);        employee.setLastName("dd");        Employee selectOne = employeeMapper.selectOne(employee);        System.out.println(selectOne);*/</span>        <span class="token comment" spellcheck="true">/*ArrayList&lt;Integer> idList = new ArrayList&lt;>();        idList.add(1);        idList.add(12);        List&lt;Employee> employees = employeeMapper.selectBatchIds(idList);        System.out.println(employees);*/</span>        <span class="token comment" spellcheck="true">/*Map&lt;String, Object> columnMap= new HashMap&lt;>();        columnMap.put("last_name","duke");        columnMap.put("age","23");        List&lt;Employee> employees = employeeMapper.selectByMap(columnMap);        System.out.println(employees);*/</span>        <span class="token comment" spellcheck="true">/**         * 物理分页         *  mybatis中的 pageHelper         *  MP中的插件分页         */</span>        List<span class="token operator">&lt;</span>Employee<span class="token operator">></span> employees <span class="token operator">=</span> employeeMapper<span class="token punctuation">.</span><span class="token function">selectPage</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>employees<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testCommonDel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//System.out.println(employeeMapper.deleteById(13));</span>        <span class="token comment" spellcheck="true">/*ArrayList&lt;Integer> idList = new ArrayList&lt;>();        idList.add(12);        idList.add(11);        employeeMapper.deleteBatchIds(idList);*/</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> cloumnMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        cloumnMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"last_name"</span><span class="token punctuation">,</span><span class="token string">"duke"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        cloumnMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        employeeMapper<span class="token punctuation">.</span><span class="token function">deleteByMap</span><span class="token punctuation">(</span>cloumnMap<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h2 id="3-Mp中Sql注入的原理"><a href="#3-Mp中Sql注入的原理" class="headerlink" title="3.Mp中Sql注入的原理"></a>3.Mp中Sql注入的原理</h2><pre class=" language-tex"><code class="language-tex">1. employeeMapper的本质就是 org.apache.ibatis.binding.MapperProxy2. MapperProxy中 SqlSession -> sqlSessionFactory</code></pre><p><img src="/2021/03/09/mybatis-plus-xue-xi-yi/Snipaste_2021-03-09_14-23-32.png" alt="Snipaste_2021-03-09_14-23-32"></p><pre class=" language-tex"><code class="language-tex">SqlSessionFacotry 中 → Configuration→ MappedStatements每一个  mappedStatement 都表示 Mapper 接口中的一个方法与 Mapper 映射文件中的一个 SQL。MP 在启动就会挨个分析 xxxMapper 中的方法，并且将对应的 SQL 语句处理好，保存到 configuration 对象中的 mappedStatements 中</code></pre><p><img src="/2021/03/09/mybatis-plus-xue-xi-yi/Snipaste_2021-03-09_14-27-56.png" alt="Snipaste_2021-03-09_14-27-56"></p><p>​        本质: 要去实例化你的bean,调用addMappedStatement,对应的就是BaseMapper里面的方法</p><p><img src="/2021/03/09/mybatis-plus-xue-xi-yi/Snipaste_2021-03-09_14-33-59.png" alt="Snipaste_2021-03-09_14-33-59"></p><pre class=" language-tex"><code class="language-tex">batch:代表是不是一个批量操作mapperclass:当前操作的接口对象modelclass:就是一个模型,当前实体类对象tableInfo:数据库表对应的反射信息 可以获取到表名,cloumn</code></pre><p><img src="/2021/03/09/mybatis-plus-xue-xi-yi/Snipaste_2021-03-09_15-14-26.png" alt="Snipaste_2021-03-09_15-14-26"></p><pre class=" language-tex"><code class="language-tex">SqlMethod.DELETE_BY_ID 是一个枚举对象    DELETE_BY_ID -> deleteById(这是一个key),简单的描述,构造sql语句的模板table.getKeyProperty():获取到他的主键String.format调用字符串格式化方法sqlMethod.getSql():获取sql模板table.getTableName():数据库的表名table.getKeyColumn():列名 就是一个ididStr:主键列languageDriver.createSqlSource:调用一个语言驱动构造一个sqlSource,拿到一个sqlSource对象(静态sql)</code></pre><p><img src="/2021/03/09/mybatis-plus-xue-xi-yi/Snipaste_2021-03-09_15-20-02.png" alt="Snipaste_2021-03-09_15-20-02"></p><p><img src="/2021/03/09/mybatis-plus-xue-xi-yi/Snipaste_2021-03-09_15-27-14.png" alt="Snipaste_2021-03-09_15-27-14"></p><pre class=" language-tex"><code class="language-tex">    再调用addDeleteMappedStatement,将有的数据填进去,没有的写成null</code></pre><p><img src="/2021/03/09/mybatis-plus-xue-xi-yi/Snipaste_2021-03-09_15-32-44.png" alt="Snipaste_2021-03-09_15-32-44"></p><pre class=" language-tex"><code class="language-tex">    然后才会进入到addMappedStatement这个方法里面</code></pre><p><img src="/2021/03/09/mybatis-plus-xue-xi-yi/Snipaste_2021-03-09_15-34-57.png" alt="Snipaste_2021-03-09_15-34-57"></p><pre class=" language-tex"><code class="language-tex">    拿到接口的名字和方法的名字,进行判断是否为查询</code></pre><p><img src="/2021/03/09/mybatis-plus-xue-xi-yi/Snipaste_2021-03-09_15-36-34.png" alt="Snipaste_2021-03-09_15-36-34"></p><pre class=" language-tex"><code class="language-tex">    MapperBuilderAssistant这个对象是用于缓存,sql参数,返回的结果集进行的处理</code></pre><p><img src="/2021/03/09/mybatis-plus-xue-xi-yi/Snipaste_2021-03-09_15-39-00.png" alt="Snipaste_2021-03-09_15-39-00"></p><pre class=" language-tex"><code class="language-tex">    进入方法的内部,有一个非常重要的一个方法,里面的sqlSource里面有要执行的sql语句,就知道了sql语句是怎么注入进来的</code></pre><p><img src="/2021/03/09/mybatis-plus-xue-xi-yi/Snipaste_2021-03-09_15-41-31.png" alt="Snipaste_2021-03-09_15-41-31"></p><p><img src="/2021/03/09/mybatis-plus-xue-xi-yi/Snipaste_2021-03-09_15-53-55.png" alt="Snipaste_2021-03-09_15-53-55"></p><pre class=" language-tex"><code class="language-tex">employeeMapper-->sqlSession-->sqlSessionFactory-->configuretion-->mappedStatements-->deleteById-->value-->sqlSource-->sql</code></pre><p><img src="/2021/03/09/mybatis-plus-xue-xi-yi/Snipaste_2021-03-09_16-07-58.png" alt="Snipaste_2021-03-09_16-07-58"></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> mybatis-plus </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> Java </tag>
            
            <tag> mybatis-plus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决log4j.xml问题http//jakarta.apache.org/log4j/ uri is not registered</title>
      <link href="2021/03/09/jie-jue-log4j-xml-wen-ti-http-jakarta-apache-org-log4j-uri-is-not-registered/"/>
      <url>2021/03/09/jie-jue-log4j-xml-wen-ti-http-jakarta-apache-org-log4j-uri-is-not-registered/</url>
      
        <content type="html"><![CDATA[<h5 id="在IDEA中，配置log4j-xml出现“http-jakarta-apache-org-log4j-uri-is-not-registered”的错误信息。"><a href="#在IDEA中，配置log4j-xml出现“http-jakarta-apache-org-log4j-uri-is-not-registered”的错误信息。" class="headerlink" title="在IDEA中，配置log4j.xml出现“http //jakarta.apache.org/log4j/ uri is not registered”的错误信息。"></a>在IDEA中，配置log4j.xml出现“http //jakarta.apache.org/log4j/ uri is not registered”的错误信息。</h5><h5 id="原始的log4j-xml配置文件："><a href="#原始的log4j-xml配置文件：" class="headerlink" title="原始的log4j.xml配置文件："></a>原始的log4j.xml配置文件：</h5><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="GB2312" ?></span><span class="token doctype">&lt;!DOCTYPE log4j:configuration SYSTEM "log4j.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">log4j:</span>configuration</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>log4j</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://jakarta.apache.org/log4j/<span class="token punctuation">"</span></span>  <span class="token attr-name">debug</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><h5 id="解决方法，详细改动例如以下所看到的"><a href="#解决方法，详细改动例如以下所看到的" class="headerlink" title="解决方法，详细改动例如以下所看到的"></a>解决方法，详细改动例如以下所看到的</h5><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="GB2312" ?></span><span class="token doctype">&lt;!DOCTYPE log4j:configuration SYSTEM "http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/xml/doc-files/log4j.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">log4j:</span>configuration</span> <span class="token attr-name">debug</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
          <category> mybatis-plus </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> Java </tag>
            
            <tag> mybatis-plus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Gitee博客</title>
      <link href="2021/03/08/hexo-gitee-bo-ke/"/>
      <url>2021/03/08/hexo-gitee-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="安装-Chocolatey"><a href="#安装-Chocolatey" class="headerlink" title="安装 Chocolatey"></a>安装 Chocolatey</h2><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210208173003887.png" alt="image-20210208173003887"></p><pre><code>Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))</code></pre><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210208173418813.png" alt="image-20210208173418813"></p><p>查看是否安装成功：</p><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210208173523760.png" alt="image-20210208173523760"></p><h2 id="通过-choco-安装-node-js-和-git"><a href="#通过-choco-安装-node-js-和-git" class="headerlink" title="通过 choco 安装 node.js 和 git"></a>通过 choco 安装 node.js 和 git</h2><pre><code>choco install nodejs --version=12.14.0</code></pre><p><strong>注意：版本不要太高</strong></p><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210208174049846.png" alt="image-20210208174049846"></p><pre><code>choco install git</code></pre><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210208174929211.png" alt="image-20210208174929211"></p><p>测试：</p><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210208174908191.png" alt="image-20210208174908191"></p><h2 id="创建-gitee-账号"><a href="#创建-gitee-账号" class="headerlink" title="创建 gitee 账号"></a>创建 gitee 账号<img src="/2021/03/08/hexo-gitee-bo-ke/image-20210208175403063.png" alt="image-20210208175403063"></h2><h2 id="配置-SSH-公钥"><a href="#配置-SSH-公钥" class="headerlink" title="配置 SSH 公钥"></a>配置 SSH 公钥</h2><p>教程：<a href="https://gitee.com/help/articles/4181">https://gitee.com/help/articles/4181</a></p><p>你可以按如下命令来生成 sshkey:</p><pre><code>ssh-keygen -t rsa -C "xxxxx@xxxxx.com"</code></pre><p>按照提示完成三次回车，即可生成 ssh key。通过查看 <code>~/.ssh/id_rsa.pub</code> 文件内容，获取到你的 public key</p><pre><code>cat ~/.ssh/id_rsa.pub</code></pre><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210208200406079.png" alt="image-20210208200406079"></p><h3 id="将公钥添加到-gitee"><a href="#将公钥添加到-gitee" class="headerlink" title="将公钥添加到 gitee"></a>将公钥添加到 gitee</h3><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210208200448756.png" alt="image-20210208200448756"></p><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210208200520051.png" alt="image-20210208200520051"></p><h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><pre><code>npm install hexo-cli -g</code></pre><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210208180641879.png" alt="image-20210208180641879"></p><h2 id="初始化-Hexo"><a href="#初始化-Hexo" class="headerlink" title="初始化 Hexo"></a>初始化 Hexo</h2><pre><code>hexo init</code></pre><p><strong>注意：hexo 模板会安装在命令行所在目录下</strong></p><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210208180920711.png" alt="image-20210208180920711"></p><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210208180939936.png" alt="image-20210208180939936"></p><p><img src="https://img-blog.csdnimg.cn/20200211135536574.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2N1bmd1ZGFmYQ==,size_1,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="运行-hexo"><a href="#运行-hexo" class="headerlink" title="运行 hexo"></a>运行 hexo</h2><pre><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code></pre><p>hexo clean：清空已有的 html 页面<br>hexo g：根据 source_posts 路径下的.md 文件生成新 html 页面<br>hexo s：启动本地服务器，打开<em>localhost:4000</em>可以查看效果</p><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210208182507840.png" alt="image-20210208182507840"></p><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210208182254781.png" alt="image-20210208182254781"></p><h1 id="Hexo-主题"><a href="#Hexo-主题" class="headerlink" title="Hexo 主题"></a>Hexo 主题</h1><p>hexo 主题大全：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p><h2 id="hexo-theme-butterfly"><a href="#hexo-theme-butterfly" class="headerlink" title="hexo-theme-butterfly"></a>hexo-theme-butterfly</h2><p>butterfly 是一款我很喜欢的主题，我们用它来演示</p><p>butterfly gitee 仓库：<a href="https://gitee.com/iamjerryw/hexo-theme-butterfly">https://gitee.com/iamjerryw/hexo-theme-butterfly</a></p><h3 id="下载方式一"><a href="#下载方式一" class="headerlink" title="下载方式一"></a>下载方式一</h3><p><strong>在博客根目录下运行</strong></p><pre><code>npm i hexo-theme-butterfly</code></pre><h3 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h3><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210208185016579.png" alt="image-20210208185016579"></p><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210208185054161.png" alt="image-20210208185054161"></p><h2 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h2><p>修改 hexo 配置文件_config.yml，把主題改為 Butterfly</p><pre><code>theme: butterfly</code></pre><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210208192815479.png" alt="image-20210208192815479"></p><p>可能会出现的错误：</p><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210208190516464.png" alt="image-20210208190516464"></p><p>解决方式：<a href="https://blog.csdn.net/weixin_44318830/article/details/104884936">https://blog.csdn.net/weixin_44318830/article/details/104884936</a></p><h3 id="运行-hexo-进行预览"><a href="#运行-hexo-进行预览" class="headerlink" title="运行 hexo 进行预览"></a>运行 hexo 进行预览</h3><pre><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code></pre><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210208192656934.png" alt="image-20210208192656934"></p><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210208192727365.png" alt="image-20210208192727365"></p><h2 id="Butterfly主题官方教程"><a href="#Butterfly主题官方教程" class="headerlink" title="Butterfly主题官方教程"></a>Butterfly主题官方教程</h2><p><a href="https://butterfly.js.org/page/2/">https://butterfly.js.org/page/2/</a></p><p><a href="https://butterfly.js.org/posts/21cfbf15/#%E5%AE%89%E8%A3%9D">https://butterfly.js.org/posts/21cfbf15/#%E5%AE%89%E8%A3%9D</a></p><p><a href="https://butterfly.js.org/posts/dc584b87/#Front-matter">https://butterfly.js.org/posts/dc584b87/#Front-matter</a></p><p><a href="https://butterfly.js.org/posts/4aa8abbe/#Button">https://butterfly.js.org/posts/4aa8abbe/#Button</a></p><p><a href="https://butterfly.js.org/posts/ceeb73f/#%E5%9C%A8%E7%B6%AB%E8%81%8A%E5%A4%A9">https://butterfly.js.org/posts/ceeb73f/#%E5%9C%A8%E7%B6%AB%E8%81%8A%E5%A4%A9</a></p><p><a href="https://butterfly.js.org/posts/98d20436/#Cannot-read-property-%E2%80%98appId%E2%80%99-of-undefined">https://butterfly.js.org/posts/98d20436/#Cannot-read-property-%E2%80%98appId%E2%80%99-of-undefined</a></p><p><a href="https://butterfly.js.org/posts/4073eda/#%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%96%A6">https://butterfly.js.org/posts/4073eda/#%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%96%A6</a></p><p><a href="https://butterfly.js.org/posts/198a4240/">https://butterfly.js.org/posts/198a4240/</a></p><h1 id="部署到-gitee（码云）"><a href="#部署到-gitee（码云）" class="headerlink" title="部署到 gitee（码云）"></a>部署到 gitee（码云）</h1><h2 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h2><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210208175919208.png" alt="image-20210208175919208"></p><h2 id="开通-Gitee-Pages-服务"><a href="#开通-Gitee-Pages-服务" class="headerlink" title="开通 Gitee Pages 服务"></a>开通 Gitee Pages 服务</h2><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210209004251786.png" alt="image-20210209004251786"><br><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210209004458150.png" alt="image-20210209004458150">!</p><h3 id="获取并设置仓库地址"><a href="#获取并设置仓库地址" class="headerlink" title="获取并设置仓库地址"></a>获取并设置仓库地址</h3><pre><code>deploy:  type: git  repository: git@gitee.com:XXX-XXX/blog.git  branch: master</code></pre><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210209003443184.png" alt="image-20210209003443184"></p><pre><code>url: http://lai-lai.gitee.ioroot: /blog</code></pre><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210209003731313.png" alt="image-20210209003731313"></p><h3 id="部署博客"><a href="#部署博客" class="headerlink" title="部署博客"></a>部署博客</h3><pre><code>hexo d</code></pre><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210209004056694.png" alt="image-20210209004056694"></p><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210209004735937.png" alt="image-20210209004735937"></p><h1 id="完结撒花"><a href="#完结撒花" class="headerlink" title="完结撒花"></a>完结撒花</h1><p><img src="/2021/03/08/hexo-gitee-bo-ke/image-20210209005647965.png" alt="image-20210209005647965"></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Gitee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA实现序列化接口Serializable自动生成serialVersionUID</title>
      <link href="2021/03/08/idea-shi-xian-xu-lie-hua-jie-kou-serializable-zi-dong-sheng-cheng-serialversionuid/"/>
      <url>2021/03/08/idea-shi-xian-xu-lie-hua-jie-kou-serializable-zi-dong-sheng-cheng-serialversionuid/</url>
      
        <content type="html"><![CDATA[<p><img src="/2021/03/08/idea-shi-xian-xu-lie-hua-jie-kou-serializable-zi-dong-sheng-cheng-serialversionuid/3.png" alt="3"></p><p><img src="/2021/03/08/idea-shi-xian-xu-lie-hua-jie-kou-serializable-zi-dong-sheng-cheng-serialversionuid/4.png" alt="4"></p><p><strong>有些版本的IDEA需要重启，有些不需要 –&gt;鼠标放在实现的类名上，出现黄色提示，点击 –&gt;选择serialVersionUID</strong></p>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySql的安装</title>
      <link href="2021/03/08/mysql-de-an-zhuang/"/>
      <url>2021/03/08/mysql-de-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h3 id="一、MYSQL的安装"><a href="#一、MYSQL的安装" class="headerlink" title="一、MYSQL的安装"></a>一、MYSQL的安装</h3><h4 id="１、打开下载的mysql安装文件mysql-5-5-27-win32-zip，双击解压缩，运行“setup-exe”"><a href="#１、打开下载的mysql安装文件mysql-5-5-27-win32-zip，双击解压缩，运行“setup-exe”" class="headerlink" title="１、打开下载的mysql安装文件mysql-5.5.27-win32.zip，双击解压缩，运行“setup.exe”"></a>１、打开下载的mysql安装文件mysql-5.5.27-win32.zip，双击解压缩，运行“setup.exe”</h4><p><img src="/2021/03/08/mysql-de-an-zhuang/1.png" alt="1"></p><p><img src="/2021/03/08/mysql-de-an-zhuang/2.png" alt="2"></p><h4 id="２、选择安装类型，有“Typical（默认）”、“Complete（完全）”、“Custom（用户自定义）”三个选项，选择“Custom”，按“next”键继续"><a href="#２、选择安装类型，有“Typical（默认）”、“Complete（完全）”、“Custom（用户自定义）”三个选项，选择“Custom”，按“next”键继续" class="headerlink" title="２、选择安装类型，有“Typical（默认）”、“Complete（完全）”、“Custom（用户自定义）”三个选项，选择“Custom”，按“next”键继续"></a>２、选择安装类型，有“Typical（默认）”、“Complete（完全）”、“Custom（用户自定义）”三个选项，选择“Custom”，按“next”键继续</h4><p><img src="/2021/03/08/mysql-de-an-zhuang/3.png" alt="3"></p><h4 id="３、点选“Browse”，手动指定安装目录"><a href="#３、点选“Browse”，手动指定安装目录" class="headerlink" title="３、点选“Browse”，手动指定安装目录"></a>３、点选“Browse”，手动指定安装目录</h4><p><img src="/2021/03/08/mysql-de-an-zhuang/4.png" alt="4"></p><h4 id="４、填上安装目录，我的是“F-Server-MySQL-MySQLServer-5-0”，建议不要放在与操作系统同一分区，这样可以防止系统备份还原的时候，数据被清空。按“OK”继续。"><a href="#４、填上安装目录，我的是“F-Server-MySQL-MySQLServer-5-0”，建议不要放在与操作系统同一分区，这样可以防止系统备份还原的时候，数据被清空。按“OK”继续。" class="headerlink" title="４、填上安装目录，我的是“F:\Server\MySQL\MySQLServer 5.0”，建议不要放在与操作系统同一分区，这样可以防止系统备份还原的时候，数据被清空。按“OK”继续。"></a>４、填上安装目录，我的是“F:\Server\MySQL\MySQLServer 5.0”，建议不要放在与操作系统同一分区，这样可以防止系统备份还原的时候，数据被清空。按“OK”继续。</h4><p> <img src="/2021/03/08/mysql-de-an-zhuang/5.png" alt="5"></p><h4 id="确认一下先前的设置，如果有误，按“Back”返回重做。按“Install”开始安装。"><a href="#确认一下先前的设置，如果有误，按“Back”返回重做。按“Install”开始安装。" class="headerlink" title="确认一下先前的设置，如果有误，按“Back”返回重做。按“Install”开始安装。"></a>确认一下先前的设置，如果有误，按“Back”返回重做。按“Install”开始安装。</h4><p><img src="/2021/03/08/mysql-de-an-zhuang/6.png" alt="6"></p><p><img src="/2021/03/08/mysql-de-an-zhuang/7.png" alt="7"></p><p><img src="/2021/03/08/mysql-de-an-zhuang/8.png" alt="8"></p><h4 id="５、正在安装中，请稍候，直到出现下面的界面-则完成MYSQL的安装"><a href="#５、正在安装中，请稍候，直到出现下面的界面-则完成MYSQL的安装" class="headerlink" title="５、正在安装中，请稍候，直到出现下面的界面, 则完成MYSQL的安装"></a>５、正在安装中，请稍候，直到出现下面的界面, 则完成MYSQL的安装</h4><p> <img src="/2021/03/08/mysql-de-an-zhuang/9.png" alt="9"></p><h3 id="二、MYSQL的配置"><a href="#二、MYSQL的配置" class="headerlink" title="二、MYSQL的配置"></a>二、MYSQL的配置</h3><h4 id="１、安装完成了，出现如下界面将进入mysql配置向导。"><a href="#１、安装完成了，出现如下界面将进入mysql配置向导。" class="headerlink" title="１、安装完成了，出现如下界面将进入mysql配置向导。"></a>１、安装完成了，出现如下界面将进入mysql配置向导。</h4><p> <img src="/2021/03/08/mysql-de-an-zhuang/10.png" alt="10"></p><p><img src="/2021/03/08/mysql-de-an-zhuang/11.png" alt="11"></p><h4 id="２、选择配置方式，“DetailedConfiguration（手动精确配置）”、“Standard-Configuration（标准配置）”，我们选择“Detailed-Configuration”，方便熟悉配置过程"><a href="#２、选择配置方式，“DetailedConfiguration（手动精确配置）”、“Standard-Configuration（标准配置）”，我们选择“Detailed-Configuration”，方便熟悉配置过程" class="headerlink" title="２、选择配置方式，“DetailedConfiguration（手动精确配置）”、“Standard Configuration（标准配置）”，我们选择“Detailed Configuration”，方便熟悉配置过程"></a>２、选择配置方式，“DetailedConfiguration（手动精确配置）”、“Standard Configuration（标准配置）”，我们选择“Detailed Configuration”，方便熟悉配置过程</h4><p> <img src="/2021/03/08/mysql-de-an-zhuang/12.png" alt="12"></p><h4 id="３、选择服务器类型，“DeveloperMachine（开发测试类，mysql占用很少资源）”、“Server-Machine（服务器类型，mysql占用较多资源）”、“Dedicated-MySQL-Server-Machine（专门的数据库服务器，mysql占用所有可用资源）”"><a href="#３、选择服务器类型，“DeveloperMachine（开发测试类，mysql占用很少资源）”、“Server-Machine（服务器类型，mysql占用较多资源）”、“Dedicated-MySQL-Server-Machine（专门的数据库服务器，mysql占用所有可用资源）”" class="headerlink" title="３、选择服务器类型，“DeveloperMachine（开发测试类，mysql占用很少资源）”、“Server Machine（服务器类型，mysql占用较多资源）”、“Dedicated MySQL Server Machine（专门的数据库服务器，mysql占用所有可用资源）”"></a>３、选择服务器类型，“DeveloperMachine（开发测试类，mysql占用很少资源）”、“Server Machine（服务器类型，mysql占用较多资源）”、“Dedicated MySQL Server Machine（专门的数据库服务器，mysql占用所有可用资源）”</h4><p> <img src="/2021/03/08/mysql-de-an-zhuang/13.png" alt="13"></p><h4 id="４、选择mysql数据库的大致用途，“MultifunctionalDatabase（通用多功能型，好）”、“TransactionalDatabase-Only（服务器类型，专注于事务处理，一般）”、“Non-Transactional-Database-Only（非事务处理型，较简单，主要做一些监控、记数用，对MyISAM数据类型的支持仅限于non-transactional），按“Next”继续。"><a href="#４、选择mysql数据库的大致用途，“MultifunctionalDatabase（通用多功能型，好）”、“TransactionalDatabase-Only（服务器类型，专注于事务处理，一般）”、“Non-Transactional-Database-Only（非事务处理型，较简单，主要做一些监控、记数用，对MyISAM数据类型的支持仅限于non-transactional），按“Next”继续。" class="headerlink" title="４、选择mysql数据库的大致用途，“MultifunctionalDatabase（通用多功能型，好）”、“TransactionalDatabase Only（服务器类型，专注于事务处理，一般）”、“Non-Transactional Database Only（非事务处理型，较简单，主要做一些监控、记数用，对MyISAM数据类型的支持仅限于non-transactional），按“Next”继续。"></a>４、选择mysql数据库的大致用途，“MultifunctionalDatabase（通用多功能型，好）”、“TransactionalDatabase Only（服务器类型，专注于事务处理，一般）”、“Non-Transactional Database Only（非事务处理型，较简单，主要做一些监控、记数用，对MyISAM数据类型的支持仅限于non-transactional），按“Next”继续。</h4><p><img src="/2021/03/08/mysql-de-an-zhuang/14.png" alt="14"></p><h4 id="５、选择网站并发连接数，同时连接的数目，“DecisionSupport-DSS-OLAP（20个左右）”、“Online-Transaction-Processing-OLTP-（500个左右）”、“Manual-Setting（手动设置，自己输一个数）”。"><a href="#５、选择网站并发连接数，同时连接的数目，“DecisionSupport-DSS-OLAP（20个左右）”、“Online-Transaction-Processing-OLTP-（500个左右）”、“Manual-Setting（手动设置，自己输一个数）”。" class="headerlink" title="５、选择网站并发连接数，同时连接的数目，“DecisionSupport(DSS)/OLAP（20个左右）”、“Online Transaction Processing(OLTP)（500个左右）”、“Manual Setting（手动设置，自己输一个数）”。"></a>５、选择网站并发连接数，同时连接的数目，“DecisionSupport(DSS)/OLAP（20个左右）”、“Online Transaction Processing(OLTP)（500个左右）”、“Manual Setting（手动设置，自己输一个数）”。</h4><p><img src="/2021/03/08/mysql-de-an-zhuang/15.png" alt="15"></p><p><img src="/2021/03/08/mysql-de-an-zhuang/16.png" alt="16"></p><h4 id="６、是否启用TCP-IP连接，设定端口，如果不启用，就只能在自己的机器上访问mysql数据库了，在这个页面上，您还可以选择“启用标准模式”（Enable-Strict-Mode），这样MySQL就不会允许细小的语法错误。如果是新手，建议您取消标准模式以减少麻烦。但熟悉MySQL以后，尽量使用标准模式，因为它可以降低有害数据进入数据库的可能性。按“Next”继续"><a href="#６、是否启用TCP-IP连接，设定端口，如果不启用，就只能在自己的机器上访问mysql数据库了，在这个页面上，您还可以选择“启用标准模式”（Enable-Strict-Mode），这样MySQL就不会允许细小的语法错误。如果是新手，建议您取消标准模式以减少麻烦。但熟悉MySQL以后，尽量使用标准模式，因为它可以降低有害数据进入数据库的可能性。按“Next”继续" class="headerlink" title="６、是否启用TCP/IP连接，设定端口，如果不启用，就只能在自己的机器上访问mysql数据库了，在这个页面上，您还可以选择“启用标准模式”（Enable Strict Mode），这样MySQL就不会允许细小的语法错误。如果是新手，建议您取消标准模式以减少麻烦。但熟悉MySQL以后，尽量使用标准模式，因为它可以降低有害数据进入数据库的可能性。按“Next”继续"></a>６、是否启用TCP/IP连接，设定端口，如果不启用，就只能在自己的机器上访问mysql数据库了，在这个页面上，您还可以选择“启用标准模式”（Enable Strict Mode），这样MySQL就不会允许细小的语法错误。如果是新手，建议您取消标准模式以减少麻烦。但熟悉MySQL以后，尽量使用标准模式，因为它可以降低有害数据进入数据库的可能性。按“Next”继续</h4><p><img src="/2021/03/08/mysql-de-an-zhuang/17.png" alt="17"></p><h4 id="７、就是对mysql默认数据库语言编码进行设置（重要），一般选UTF-8，按-“Next”继续。"><a href="#７、就是对mysql默认数据库语言编码进行设置（重要），一般选UTF-8，按-“Next”继续。" class="headerlink" title="７、就是对mysql默认数据库语言编码进行设置（重要），一般选UTF-8，按 “Next”继续。"></a>７、就是对mysql默认数据库语言编码进行设置（重要），一般选UTF-8，按 “Next”继续。</h4><p><img src="/2021/03/08/mysql-de-an-zhuang/18.png" alt="18"></p><h4 id="８、选择是否将mysql安装为windows服务，还可以指定ServiceName（服务标识名称），是否将mysql的bin目录加入到WindowsPATH（加入后，就可以直接使用bin下的文件，而不用指出目录名，比如连接，“mysql-exe-uusername-ppassword-”就可以了，不用指出mysql-exe的完整地址，很方便），我这里全部打上了勾，ServiceName不变。按“Next”继续。"><a href="#８、选择是否将mysql安装为windows服务，还可以指定ServiceName（服务标识名称），是否将mysql的bin目录加入到WindowsPATH（加入后，就可以直接使用bin下的文件，而不用指出目录名，比如连接，“mysql-exe-uusername-ppassword-”就可以了，不用指出mysql-exe的完整地址，很方便），我这里全部打上了勾，ServiceName不变。按“Next”继续。" class="headerlink" title="８、选择是否将mysql安装为windows服务，还可以指定ServiceName（服务标识名称），是否将mysql的bin目录加入到WindowsPATH（加入后，就可以直接使用bin下的文件，而不用指出目录名，比如连接，“mysql.exe-uusername -ppassword;”就可以了，不用指出mysql.exe的完整地址，很方便），我这里全部打上了勾，ServiceName不变。按“Next”继续。"></a>８、选择是否将mysql安装为windows服务，还可以指定ServiceName（服务标识名称），是否将mysql的bin目录加入到WindowsPATH（加入后，就可以直接使用bin下的文件，而不用指出目录名，比如连接，“mysql.exe-uusername -ppassword;”就可以了，不用指出mysql.exe的完整地址，很方便），我这里全部打上了勾，ServiceName不变。按“Next”继续。</h4><p><img src="/2021/03/08/mysql-de-an-zhuang/19.png" alt="19"></p><h4 id="９、询问是否要修改默认root用户（超级管理）的密码。“Enable-root-access-fromremote-machines（是否允许root用户在其它的机器上登陆，如果要安全，就不要勾上，如果要方便，就勾上它）”。最后“Create-An-Anonymous-Account（新建一个匿名用户，匿名用户可以连接数据库，不能操作数据，包括查询）”，一般就不用勾了，设置完毕，按“Next”继续。"><a href="#９、询问是否要修改默认root用户（超级管理）的密码。“Enable-root-access-fromremote-machines（是否允许root用户在其它的机器上登陆，如果要安全，就不要勾上，如果要方便，就勾上它）”。最后“Create-An-Anonymous-Account（新建一个匿名用户，匿名用户可以连接数据库，不能操作数据，包括查询）”，一般就不用勾了，设置完毕，按“Next”继续。" class="headerlink" title="９、询问是否要修改默认root用户（超级管理）的密码。“Enable root access fromremote machines（是否允许root用户在其它的机器上登陆，如果要安全，就不要勾上，如果要方便，就勾上它）”。最后“Create An Anonymous Account（新建一个匿名用户，匿名用户可以连接数据库，不能操作数据，包括查询）”，一般就不用勾了，设置完毕，按“Next”继续。"></a>９、询问是否要修改默认root用户（超级管理）的密码。“Enable root access fromremote machines（是否允许root用户在其它的机器上登陆，如果要安全，就不要勾上，如果要方便，就勾上它）”。最后“Create An Anonymous Account（新建一个匿名用户，匿名用户可以连接数据库，不能操作数据，包括查询）”，一般就不用勾了，设置完毕，按“Next”继续。</h4><p><img src="/2021/03/08/mysql-de-an-zhuang/20.png" alt="20"></p><h4 id="１０、确认设置无误，按“Execute”使设置生效，即完成MYSQL的安装和配置。"><a href="#１０、确认设置无误，按“Execute”使设置生效，即完成MYSQL的安装和配置。" class="headerlink" title="１０、确认设置无误，按“Execute”使设置生效，即完成MYSQL的安装和配置。"></a>１０、确认设置无误，按“Execute”使设置生效，即完成MYSQL的安装和配置。</h4><p><img src="/2021/03/08/mysql-de-an-zhuang/21.png" alt="21"></p><p><img src="/2021/03/08/mysql-de-an-zhuang/22.png" alt="22"></p><h3 id="三、报错"><a href="#三、报错" class="headerlink" title="三、报错"></a>三、报错</h3><p><strong>注意：设置完毕，按“Finish”后有一个比较常见的错误，就是不能“Startservice”，一般出现在以前有安装mysql的服务器上，解决的办法，先保证以前安装的mysql服务器彻底卸载掉了；不行的话，检查是否按上面一步所说，之前的密码是否有修改，照上面的操作；如果依然不行，将mysql安装目录下的data文件夹备份，然后删除，在安装完成后，将安装生成的 data文件夹删除，备份的data文件夹移回来，再重启mysql服务就可以了，这种情况下，可能需要将数据库检查一下，然后修复一次，防止数据出错。</strong></p><p><img src="/2021/03/08/mysql-de-an-zhuang/23.png" alt="23"></p><h4 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h4><h5 id="1-卸载MySQL"><a href="#1-卸载MySQL" class="headerlink" title="1, 卸载MySQL"></a>1, 卸载MySQL</h5><h5 id="2-WindowsXp系统删除目录C-Documents-and-Settings-All-Users-Application-Data-windows-7-8-10操作系统删除目录C-ProgramData-MySQL"><a href="#2-WindowsXp系统删除目录C-Documents-and-Settings-All-Users-Application-Data-windows-7-8-10操作系统删除目录C-ProgramData-MySQL" class="headerlink" title="2, WindowsXp系统删除目录C:\Documents and Settings\All Users\Application Data\windows 7\8\10操作系统删除目录C:\ProgramData\MySQL"></a>2, WindowsXp系统删除目录C:\Documents and Settings\All Users\Application Data\windows 7\8\10操作系统删除目录C:\ProgramData\MySQL</h5><h5 id="3、重新安装就可以了"><a href="#3、重新安装就可以了" class="headerlink" title="3、重新安装就可以了"></a>3、重新安装就可以了</h5>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>加快maven的构建</title>
      <link href="2021/03/08/jia-kuai-maven-de-gou-jian/"/>
      <url>2021/03/08/jia-kuai-maven-de-gou-jian/</url>
      
        <content type="html"><![CDATA[<p>每次创建项目时， IDEA 要使用插件进行创建，这些插件当你创建新的项目时，它每次都会去中央仓库下载，这样<br>使得创建比较慢。应该创建时，让它找本地仓库中的插件进行创建项目。</p><p>解决方式：<br>在 IDEA 的 Settings 窗口的 Build, Execution, Deployment &gt; Build Tools &gt; Maven &gt; Runner 中对 VM Option 设置<br>为 <strong>-DarchetypeCatalog=internal</strong></p><p><img src="/2021/03/08/jia-kuai-maven-de-gou-jian/%E5%8A%A0%E5%BF%ABmaven%E6%9E%84%E5%BB%BA.png" alt="加快maven构建"></p>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
          <category> maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多个文件排开</title>
      <link href="2021/03/08/duo-ge-wen-jian-yi-yi-pai-kai-bu-hui-zhe-die/"/>
      <url>2021/03/08/duo-ge-wen-jian-yi-yi-pai-kai-bu-hui-zhe-die/</url>
      
        <content type="html"><![CDATA[<p>有时候要是打开多个文件，要么都显示在一行，要么因为空间不足，就给省略显示，这样看着，或者点着，都不是很方便<br>IntelliJ IDEA 这个编辑器就提供了应对办法，要是知道怎么设置，那是最好，不知道的可以参考如下图的修改：<br>1，修改上限值，可以最多显示30个tabs，<br>2，多行显示，不会拥挤在一行，或者干脆就收缩起来。</p><p>具体显示效果如下：</p><p><img src="/2021/03/08/duo-ge-wen-jian-yi-yi-pai-kai-bu-hui-zhe-die/1.png" alt="1"></p><p><img src="/2021/03/08/duo-ge-wen-jian-yi-yi-pai-kai-bu-hui-zhe-die/2.png" alt="2"></p><p><img src="/2021/03/08/duo-ge-wen-jian-yi-yi-pai-kai-bu-hui-zhe-die/3.png" alt="3"></p>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
